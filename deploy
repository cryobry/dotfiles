#!/usr/bin/env bash
# Interactively deploy GNU Stow packages
# Takes one optional argument, the HOSTNAME
# Add custom package groups to the STOW_MAP array below

# Determine the hostname to use for packages directory alias
ALIAS=${1:-${HOSTNAME:-$(hostname)}}

# Get script dir for relative stow paths
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

# Enable automatic mode if user passes --yes
declare -g YES=0
[[ " $1 " == " --yes " ]] && YES=1

# Map of source packages and destinations
declare -A STOW_MAP=(
  ["$SCRIPT_DIR/common/home"]="$HOME"
  ["$SCRIPT_DIR/common/root"]="/"
  ["$SCRIPT_DIR/$ALIAS/home"]="$HOME"
  ["$SCRIPT_DIR/$ALIAS/root"]="/"
)

for stowdir in "${!STOW_MAP[@]}"; do
  target="${STOW_MAP[$stowdir]}"
  [[ -d $stowdir ]] || continue
  SUDO=""
  [[ $target == "/" ]] && SUDO="sudo"
  
  echo "Deploying packages from $stowdir to $target."
  for pkg in "$stowdir"/*; do
    [[ -d $pkg ]] || continue
    pkg_name=$(basename "$pkg")
    
    echo -e "$pkg_name\n${pkg_name//?/-}"
    
    ADOPT=""
    # Try simulation to detect conflicts
    if ! sim_output=$($SUDO stow --dir "$stowdir" --simulate --dotfiles --restow --target "$target" "$pkg_name" 2>&1); then
      echo "Simulated stow failed for '$pkg_name' package."
      # Extract conflicting files from stow output
      if conflicts=$(echo "$sim_output" | grep '^\s*\*' | sed -E 's/.*: (.+)$/\1/'); then
        echo "Conflicting files detected."

        while IFS= read -r conflict_file; do
          full_path="$target/$conflict_file"
          unset choice
          
          if [[ -L $full_path ]] &&
            target_link=$(readlink "$full_path") &&
            [[ -e $target_link ]]; then
              echo "$conflict_file is an existing valid symlink."
              ((YES)) || read -rp "Skip package [s|<Enter>] or overwrite file [o]: " choice
              if [[ -z $choice || ${choice,,} == "s" ]]; then
                echo "Skipping package $pkg_name."
                continue 2
              fi
          elif [[ -f "$full_path" ]]; then
            echo "$conflict_file is an existing file."
            ((YES)) || read -rp "Skip package [s|<Enter>], adopt file [a], or overwrite file [o]: " choice
            if [[ -z $choice || ${choice,,} == "s" ]]; then
              echo "Skipping package $pkg_name."
              continue 2
            fi
            if [[ ${choice,,} == "a" ]]; then
              echo "Using --adopt."
              ADOPT="--adopt"
            fi
          fi

          # Remove broken symlinks and conflicting files
          [[ -z $choice || ${choice,,} == "o" ]] && $SUDO rm -f "$full_path"
        done <<< "$conflicts"
      fi
    fi

    # Stow the package      
    echo "$SUDO stow --dir $stowdir --dotfiles $ADOPT --restow --target $target $pkg_name"
    $SUDO stow --dir "$stowdir" --dotfiles $ADOPT --restow --target "$target" "$pkg_name"
    echo
  done
done